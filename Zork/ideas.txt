1. hacer un bool en "Item" que determine si puede contener Items dentro o no (p.e. una espada no puede, un saco sí)
2. implementar algo en "Exit" que represente si necesita una llave o no
3. que el arma brille cuando el enemigo esté en una habitación connexa a la que estás. que brille mucho cuando esté en la misma.


"contains" de Player == inventario. Es decir, solo puede contener Item (?)

DUDA: update pura o no?


Sobre el contains:

- cuando inicializo el mundo, cada entidad tiene su contain. depende del tipo de entidad, contain es una cosa u otra.
p.e. el contains de player es el inventario, el de room es las exits, items y creatures que hay. al final se acaba creando
una jerarquía de entidades, como un arbol.



							Room
							  |
							  |
							  |
			-------------------------------------------------------------------------
			|									|
			|									|
		   Saco marrón								     Player
			|									|
			|								   ------------
		     Espada								   |	      |
											Lámpara     Llave


Ahora imagínate que abro el saco y saco la espada. Espada sería una entidad más en Room, al mismo nivel que Saco marrón y Player. Es decir, quitaríamos la espada del vector de entidades de saco marrón y la meteríamos en Room. O imagínate que dropeo la lámpara, pues igual, la quitariamos del vector de entidades de player y la meteríamos en el de Room. Tendríamos que hacer un método (no sé si en World o Entity) que actualice el contain al que pertenece cada objeto cuando interactuamos con él. Para esto habría que indicar el Parent de cada entidad (el padre en el árbol), para saber donde ir. Por ejemplo, dropeo la lámpara, decimos "Cuál es el parent de Lámpara?" Player. Vale, "cuál es el parent de Player?" Room. Vale, pues si dropeo la lámpara, pasará a formar parte del Parent de su Parent, es decir, de Room. Otra cosa a tener en cuenta es que cada instancia por ejemplo de Exit JAMÁS pasará a formar parte de otro vector de entidades, siempre se quedará en el de Room, ya que no podemos modificar la exit, es una puerta sabes? Claro, pues esa es la función Update, acabo de caer no? Podemos convertirla en pura.

O por ejemplo, si queremos hacer un NPC que cambie de Room segun el turno, se tendrá que cambiar el parent a otra Room.

Al final de cada "turno", haces Update y asignas (según qué entidades) las entidades a la lista contain de sus parents.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DESCRIPCIONES DE EXITS (made in ChatGPT que no soy tan ingenioso todavía)

📍 Entry → North → Kitchen
The room feels still, but you notice a faint draft coming from the north. The scent of aged spices and something long forgotten beckons you to the doorway ahead.

📍 Kitchen → East → Dining Room
To the east, a darkened passageway stretches forward. The heavy air grows denser as you move, and the stillness is palpable, inviting you to step into the unknown.

📍 Dining Room → East → Library (🔒 Requires a key)
To the east, a tall and imposing doorway stands. Its frame blends almost seamlessly with the shadows. There's a strange resistance here, as if the passage doesn’t want to be disturbed.

(Una vez desbloqueada)
The door creaks open slightly as the resistance fades. A dark, quiet room waits beyond, its silence almost deafening.

📍 Library → South → Cellar (🔍 Hidden passage)
To the south, you notice something odd—almost as if the wall is too perfect. With a closer inspection, you find a faint outline in the stone, a hidden passage leading downward.

(Después de abrirlo)
The concealed passageway opens with a low groan. The cold darkness below beckons you to descend.

📍 Cellar → West → Studio
To the west, a narrow corridor leads into an even deeper silence. The dampness in the air grows heavier, and the oppressive quiet swallows your every step.

📍 Cellar → South → Gallery
In the southern corner, the darkness seems to thicken. There is something here, something you can feel but not quite see, drawing you into the shadows beyond.

📍 Cellar → East → Garden (🔒 Enemy drops key)
To the east, a heavy obstruction halts your path. It resists, unmoving. Something prowls nearby, its presence brushing against the silence.

(Una vez conseguida la llave y desbloqueado)
With the key in hand, the barrier gives way, creaking as it opens. A fresh, earthy scent emerges from beyond, cool and inviting.

📍 Garden → East → Final
To the east, the air feels lighter, less oppressive. The path ahead beckons with an almost otherworldly pull, drawing you toward the final destination of your journey.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Dificultades

Como hace tiempo que no diseño un código estructurado por clases, me ha costado un poco saber por dónde y cómo empezar.